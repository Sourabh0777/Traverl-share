{"ast":null,"code":"var _jsxFileName = \"/home/sourabh/Documents/0. Work/0. Project/MERN Stack/Client/src/Test.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [productsData, setproductsData] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    setIsLoading(true);\n    try {\n      const responseData = await fetch(\"https://dummyjson.com/products\");\n      const ConvertDat = await responseData.json();\n      const finalData = await ConvertDat.products;\n      console.log(\"ðŸš€ ~ file: Test.jsx:15 ~ fetchData ~ ConvertDat:\", finalData);\n      setproductsData(finalData);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      throw new Error(\"Error Occured While Fetching Data\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoading && productsData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: productsData.map(product => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: product.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: product.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"Pdk52XvLByR1ADZh08bRavIpuF0=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Test","_s","productsData","setproductsData","isLoading","setIsLoading","fetchData","responseData","fetch","ConvertDat","json","finalData","products","console","log","error","Error","children","map","product","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sourabh/Documents/0. Work/0. Project/MERN Stack/Client/src/Test.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Test = () => {\n  const [productsData, setproductsData] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    setIsLoading(true);\n    try {\n      const responseData = await fetch(\"https://dummyjson.com/products\");\n      const ConvertDat = await responseData.json();\n      const finalData = await ConvertDat.products;\n      console.log(\n        \"ðŸš€ ~ file: Test.jsx:15 ~ fetchData ~ ConvertDat:\",\n        finalData\n      );\n      setproductsData(finalData);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n\n      throw new Error(\"Error Occured While Fetching Data\");\n    }\n  };\n  return (\n    <div>\n      {!isLoading && productsData && (\n        <div>\n          {productsData.map((product) => {\n            return (\n                <>\n              <div>\n                <h1>{product.title}</h1>\n              </div>\n              <div><h6>{product.title}</h6></div>\n              </>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Test;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAClD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjDD,SAAS,CAAC,MAAM;IACdY,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BD,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAME,YAAY,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MAClE,MAAMC,UAAU,GAAG,MAAMF,YAAY,CAACG,IAAI,CAAC,CAAC;MAC5C,MAAMC,SAAS,GAAG,MAAMF,UAAU,CAACG,QAAQ;MAC3CC,OAAO,CAACC,GAAG,CACT,kDAAkD,EAClDH,SACF,CAAC;MACDR,eAAe,CAACQ,SAAS,CAAC;MAC1BN,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdV,YAAY,CAAC,KAAK,CAAC;MAEnB,MAAM,IAAIW,KAAK,CAAC,mCAAmC,CAAC;IACtD;EACF,CAAC;EACD,oBACEnB,OAAA;IAAAoB,QAAA,EACG,CAACb,SAAS,IAAIF,YAAY,iBACzBL,OAAA;MAAAoB,QAAA,EACGf,YAAY,CAACgB,GAAG,CAAEC,OAAO,IAAK;QAC7B,oBACItB,OAAA,CAAAE,SAAA;UAAAkB,QAAA,gBACFpB,OAAA;YAAAoB,QAAA,eACEpB,OAAA;cAAAoB,QAAA,EAAKE,OAAO,CAACC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC,eACN3B,OAAA;YAAAoB,QAAA,eAAKpB,OAAA;cAAAoB,QAAA,EAAKE,OAAO,CAACC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,eACjC,CAAC;MAEP,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CA3CID,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AA6CV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}