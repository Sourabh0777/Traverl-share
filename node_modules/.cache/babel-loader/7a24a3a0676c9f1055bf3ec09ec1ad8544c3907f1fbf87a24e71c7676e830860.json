{"ast":null,"code":"var _jsxFileName = \"/home/sourabh/Documents/0. Work/0. Project/MERN Stack/Client/src/places/pages/UpdatePlace.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./PlaceForm.css\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePlace = () => {\n  _s();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedPlace, setloadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: \"\",\n      isValid: false\n    },\n    description: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    debugger;\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5001/api/places/${placeId}`);\n        setloadedPlace(responseData.place);\n        console.log(\"working\");\n        setFormData({\n          title: {\n            value: responseData.places.title,\n            isValid: true\n          },\n          description: {\n            value: responseData.places.description,\n            isValid: true\n          }\n        }, true);\n      } catch (error) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, placeId, setFormData]);\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const responseData = await sendRequest(`http://localhost:5001/api/places/${placeId}`, 'PATCH', JS);\n      setloadedPlace(responseData.place);\n      console.log(\"working\");\n      setFormData({\n        title: {\n          value: responseData.places.title,\n          isValid: true\n        },\n        description: {\n          value: responseData.places.description,\n          isValid: true\n        }\n      }, true);\n    } catch (error) {}\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n  if (!loadedPlace && !error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Could not find place!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this), !isLoading && loadedPlace && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"place-form\",\n      onSubmit: placeUpdateSubmitHandler,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"title\",\n        element: \"input\",\n        type: \"text\",\n        label: \"Title\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Please enter a valid title.\",\n        onInput: inputHandler,\n        initialValue: loadedPlace.title,\n        initialValid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"description\",\n        element: \"textarea\",\n        label: \"Description\",\n        validators: [VALIDATOR_MINLENGTH(5)],\n        errorText: \"Please enter a valid description (min. 5 characters).\",\n        onInput: inputHandler,\n        initialValue: loadedPlace.description,\n        initialValid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: \"UPDATE PLACE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdatePlace, \"ipP7DXhDm5a2ccxTfaF6fRIHjyY=\", false, function () {\n  return [useHttpClient, useParams, useForm];\n});\n_c = UpdatePlace;\nexport default UpdatePlace;\nvar _c;\n$RefreshReg$(_c, \"UpdatePlace\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Input","Button","Card","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","useHttpClient","ErrorModal","LoadingSpinner","jsxDEV","_jsxDEV","UpdatePlace","_s","isLoading","error","sendRequest","clearError","loadedPlace","setloadedPlace","placeId","formState","inputHandler","setFormData","title","value","isValid","description","fetchPlaces","responseData","place","console","log","places","placeUpdateSubmitHandler","event","preventDefault","JS","className","children","asOverlay","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","onClear","onSubmit","id","element","type","label","validators","errorText","onInput","initialValue","initialValid","disabled","_c","$RefreshReg$"],"sources":["/home/sourabh/Documents/0. Work/0. Project/MERN Stack/Client/src/places/pages/UpdatePlace.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./PlaceForm.css\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nconst UpdatePlace = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setloadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  useEffect(() => {\n    debugger;\n\n\n    const fetchPlaces = async () => {\n\n      try {\n        const responseData = await sendRequest(\n          `http://localhost:5001/api/places/${placeId}`\n        );\n        setloadedPlace(responseData.place);\n        console.log(\"working\");\n\n        setFormData(\n          {\n            title: {\n              value: responseData.places.title,\n              isValid: true,\n            },\n            description: {\n              value: responseData.places.description,\n              isValid: true,\n            },\n          },\n          true\n        );\n      } catch (error) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async(event) => {\n    event.preventDefault();\n    try {\n      const responseData = await sendRequest(\n        `http://localhost:5001/api/places/${placeId}`,'PATCH',\n        JS\n      );\n      setloadedPlace(responseData.place);\n      console.log(\"working\");\n\n      setFormData(\n        {\n          title: {\n            value: responseData.places.title,\n            isValid: true,\n          },\n          description: {\n            value: responseData.places.description,\n            isValid: true,\n          },\n        },\n        true\n      );\n    } catch (error) {}\n\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner asOverlay />\n      </div>\n    );\n  }\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {error && <ErrorModal error={error} onClear={clearError} />}\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          {isLoading && <div className=\"center\"></div>}\n\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}