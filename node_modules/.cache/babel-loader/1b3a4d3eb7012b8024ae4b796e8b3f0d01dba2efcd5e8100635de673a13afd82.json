{"ast":null,"code":"var _jsxFileName = \"/home/sourabh/Documents/0. Work/0. Project/MERN Stack/Client/src/Test2.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countries = [{\n  name: \"India\",\n  value: \"IN\",\n  cities: [\"Delhi\", \"Mumbai\", \"Kolkata\"]\n}, {\n  name: \"USA\",\n  value: \"US\",\n  cities: [\"New York\", \"Florida\", \"Wasington DC\"]\n}, {\n  name: \"United Kingdom\",\n  value: \"UK\",\n  cities: [\"London\", \"Manchester City\", \"Cambridge\"]\n}];\nconst Test2 = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"countries\",\n      children: \"This is lable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"\",\n      id: \"countries\",\n      onChange: showChit,\n      children: [\" \", countries.map(country => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country.name,\n          children: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = Test2;\nTest2.propTypes = {};\nexport default Test2;\nvar _c;\n$RefreshReg$(_c, \"Test2\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","countries","name","value","cities","Test2","props","children","for","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","showChit","map","country","_c","propTypes","$RefreshReg$"],"sources":["/home/sourabh/Documents/0. Work/0. Project/MERN Stack/Client/src/Test2.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst countries = [\n  {\n    name: \"India\",\n    value: \"IN\",\n    cities: [\"Delhi\", \"Mumbai\", \"Kolkata\"],\n  },\n  {\n    name: \"USA\",\n    value: \"US\",\n    cities: [\"New York\", \"Florida\", \"Wasington DC\"],\n  },\n  {\n    name: \"United Kingdom\",\n    value: \"UK\",\n    cities: [\"London\", \"Manchester City\", \"Cambridge\"],\n  },\n];\n\nconst Test2 = (props) => {\n  return (\n    <div>\n      <label for=\"countries\">This is lable</label>\n      <select name=\"\" id=\"countries\" onChange={showChit}>\n        {\" \"}\n        {countries.map((country) => {\n          return <option value={country.name}>{country.name}</option>;\n        })}\n      </select>\n    </div>\n  );\n};\n\nTest2.propTypes = {};\n\nexport default Test2;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnC,MAAMC,SAAS,GAAG,CAChB;EACEC,IAAI,EAAE,OAAO;EACbC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS;AACvC,CAAC,EACD;EACEF,IAAI,EAAE,KAAK;EACXC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,cAAc;AAChD,CAAC,EACD;EACEF,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE,CAAC,QAAQ,EAAE,iBAAiB,EAAE,WAAW;AACnD,CAAC,CACF;AAED,MAAMC,KAAK,GAAIC,KAAK,IAAK;EACvB,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAOQ,GAAG,EAAC,WAAW;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5CZ,OAAA;MAAQE,IAAI,EAAC,EAAE;MAACW,EAAE,EAAC,WAAW;MAACC,QAAQ,EAAEC,QAAS;MAAAR,QAAA,GAC/C,GAAG,EACHN,SAAS,CAACe,GAAG,CAAEC,OAAO,IAAK;QAC1B,oBAAOjB,OAAA;UAAQG,KAAK,EAAEc,OAAO,CAACf,IAAK;UAAAK,QAAA,EAAEU,OAAO,CAACf;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAC7D,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACM,EAAA,GAZIb,KAAK;AAcXA,KAAK,CAACc,SAAS,GAAG,CAAC,CAAC;AAEpB,eAAed,KAAK;AAAC,IAAAa,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}